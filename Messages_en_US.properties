
REM = Lembrar de alterar as variáveis "nMsgEmul" e "nMsgComp" em icg.ig.JanelaAjuda

msgVersao     = Version: $OBJ$ of $OBJ$

# Configuracao.java: messages to buttons
buttonModelCompile           = Use compilation enviroment
buttonModelEmulator          = Use emulation environment
buttonEvaluate               = Evaluate an exercise
buttonStartConstructExercise = Starting the exercise template builder
buttonStartEmul              = Start code emulation
buttonEmulStepByStep         = Emulation step-by-step: the next step
buttonLoadCode               = Load code into memory
buttonInfo                   = Information
buttonFontMemory             = Change font for memory
buttonFontCode               = Change font for code
buttonConstructExercise      = Build feedback exercise: register inputs/outputs
buttonCompile                = Compile: generates object code
buttonAbout                  = About iCG
buttonHelp                   = \ Help

REM = icg.iCG: Answer model / template
gabInicio   = Register each input/output (during emulation), at the end click in "Evaluate an exercise"
gabFim      = Finalize the answer model
gabErTitle  = About the exercises template construction
gabEr1Exp1  = In order to genarate a new exercise template,
gabEr1Exp2  = it is necessary a program in Memory!
gabEr2Exp1  = Genarate a new exercise template: 
gabEr2Exp2  = 1. now you must run your program;
gabEr2Exp3  = 2. enter any set of datas required by your program;
gabEr2Exp4  = 3. when your program ends, you can stop the recording
gabEr2Exp5  = \ \ \ clicking the same button or star the recording of
gabEr2Exp6  = \ \ \ a new set of <input x output> to be used as a template.
gabEr3Exp1  = The new exercise template is ready to be recorded,
gabEr3Exp2  = please, use the button: 
gabErrorEmpty1 = Sorry, but I have no register of a list of <inputs x outputs>
gabErrorEmpty2 = to be used as an exercise template!

REM
msgCommand      = Command
msgAboutCommand = about command
msgOutput       = output
msgAcumulator   = Acumulator
msgValueAC      = Value AC
msgEditFont     = Edit font of
msgFMemory      = Memory
msgFCode        = Code
msgStore        = Store
msgOpen         = Open

REM icg.compilador.CompilerPanel
msgCode         = Enter your program code here
msgObject       = Runnable
msgEnterCode    = Here appear the messages. Enter your programm in the window "Code"
msgEmptyCode    = Empty code! It is necessary to enter your source code

REM icg.compilador.CompilerBaseClass, icg.compilador.Elemento
cmdIf = if
cmdElse = else
cmdWhile = while
cmdRead = read
cmdWrite = write

REM icg.compilador.CompilerBaseClas
msgCompComp = Compilation
msgCompOK = The source code was successfully recognized
msgCompErrNotOK = The souce code recognition failed
msgCompErrInvComL = Line $OBJ$. Error: invalid command!
msgCompErrOpenParTpar = Error: it was expected an operand after \'(\' (it was founded \'$OBJ$\')
msgCompErrCloseParTpar = Error: it was expected the symbol \')\' (it was founded \'$OBJ$\')
msgCompErrParOrOperTpar = Erro: it was expected the symbol \'(\' or an operand (it was founded \'$OBJ$\')
msgCompErrELfinal = EXPLOG - Error: founded the source code end
msgCompErrEmptyAfterOper = Error: source code ended after an unary operand (\'+\' or \'-\') (it was founded operand)
msgCompErrEAend = Error: source code ended after an Arithmetic Expression
msgCompErrEAendT = Error: source code ended after a factor of an Arithmetic Expression
msgCompErrELexpect = Error: it was expected a Logical Expression
msgCompErrParamVar = Error: incorrect parameters (it was founded a variable)
msgCompErrCommEnd = Error: after a command, it was expected the symbol \';\'
msgCompErrExpectEA = Error: it was expected an Arithmetic Expression (to define a variable)
msgCompErrExpectComm = Error: it was expected a command
msgCompErrFound = It was founded the object \"$OBJ$\" (in item $OBJ$) 
msgCompErrExpectVar = Error: it was expected a variable
msgCompErrNotExpectFinal = Error: it was unexpected the end of the source code
msgCompErrExpectTypeObj = Error: it is a confusion between the object type and the object itself...
msgCompErrExpectCloseParEL = Error: it was expected the symbol \')\' after any Logical Expression
msgCompErrExpectCloseParOrComma = Error: it was expected the symbol \')\' or \',\'
msgCompErrExpectOpenPar = Error: it was expected the symbol \')\'

REM Botao, ToolTip
REM Compilador
Emulador = Emulator
Compilador = Compiler
Informacoes = Information
Ajuda = Help
Sobre = About
Compila = Compile
REM Emulador
EnviarAvaliar = Send/Evaluate exercise
Gabarito = Template
Emula = Emulate
EmulaPassoPasso = Emulate step-by-step
Atualiza = Update

REM = Change 'nMsgComp' in icg.ig.JanelaAjuda
msgAjudaComp  =   Help about the compiler of iCG
ajudaComp1    =      iCG - emulator/compiler\n
ajudaComp2    =Available commands:\n
ajudaComp3    = Relational operators (ROp): ==, !=, <=, >=, <, >
ajudaComp4    = Logical operators (LOp):    &&, ||, ! (e, ou e negação)
ajudaComp5    = BCMD:      simple command ("read(a);") or block "{ ... }"
ajudaComp5    = EA:        arithmetic expression (a+b, a-b, a*b, a/b)
ajudaComp6    = EL:        logical expression ("EA ROp EA", "EL LOp EL")\n
ajudaComp7    = Selection: "if (EL) BCMD [else BCMD]"
ajudaComp8    = Loop:      "while (EL) BCMD"
ajudaComp9    = Input:     "read(var);"
ajudaComp10   = Ouput:     "write(var);"

REM = Changer 'nMsgEmul' in icg.ig.JanelaAjuda
msgAjudaEmul  =   Help about the emulator of iCG
ajudaEmul1    =      iCG - emulator/compiler\n
ajudaEmul2    = Enter the "binary" code in the text area at the right side
ajudaEmul3    = After it, load the code with a click in "Update"
ajudaEmul4    = Click in "Emulate" to "run" your program
ajudaEmul5    = Click in "Step-by-step" to "run" one instruction by time\n
ajudaEmul6    = Commands: 
ajudaEmul7    = 0EE: AC <- cEE
ajudaEmul8    = 1EE: EE <- cAC
ajudaEmul9    = 2EE: AC <- cAC + cEE
ajudaEmul10   = 3EE: AC <- cAC - cEE
ajudaEmul11   = 4EE: AC <- cAC * cEE
ajudaEmul12   = 5EE: AC <- cAC / cEE
ajudaEmul13   = 6EE: if cAC>0, do EPI <- EE
ajudaEmul14   = 7EE: read a value and store it in EE
ajudaEmul15   = 8EE: write the value in EE
ajudaEmul16   = 9EE: EPI <- EE
ajudaEmul17   = 0-N: AC <- N, with integer N
ajudaEmul18   = 000: end of execution

REM = Change 'nMsgSobre' in icg.ig.JanelaAjuda
msgSobre      =   About iCG: interactive Leargning Module
msgSobre1     =      iCG - emulator/compiler\n
msgSobre2     = interactive Leargning Module (iLM)
msgSobre3     = To teach/learn Introduction to Computer Science
msgSobre4     = Author: Leônidas de Oliveira Brandão\n
msgSobre5     = http://www.matematica.br/icg

barraMsg      = Message bar

REM icg.iCG
buttonMemory = Memory
buttonCode = Code
buttonCodes = Codes
labelEdit = Edit font of
labelExerc = Exercise
errInputEmpty = Exercise with problem: I couldn't find any input to test the teacher template
REM ' - keep this line this way
exercNotCompleteRight = Your answer presents some incompatibility with the teacher template
exercCompleteRight = Congratulations! Your answer presents all the requirements
exercWrong = Unfortunateboolean hasCodeInMemory ()ly your answer failed in all the template tests...
editionOfFont = Edition of fonts
modelOfFont = The font to be used is like one
appletInformation = Information about the iCG Applet
exercEmptyAnswer = Attention: your answer is \"empty\"
exercFeedbackBlocked = In this exercise the results of the evaluation is blocked the teacher!
exercAuthorTestNum = Test number
exercInputMark = Input
exercOutputMark = Output
exercTestCorrect = The answer passed in this test
exercTestWrong =  The answer failed in this test
exercSituation = Situation
exercNotTemplate = This is not an exercise with a template for automatic evaluation
errFileNotiCG = Error: this file seems not be from iCG...

REM icg.emulador.EmulatorBaseClass
emulInvalidInstruction = invalid instruction
msgArqGravadoSucesso = File registered with success!
emulStore = Save
emulOpen = Open
emulOutput = output
emulLoadedInstr = were loaded
emulinstructions = instructions
emulInvalidNum = invalid insstruction
emulErrorInvInstr = It was not a valid instruction! In
emulEndProgramm = end of programm
emulEmpty = empty
msgArqInexistente = The file $OBJ$ could not be found!
msgFileNotWrite = I could not write a file named $OBJ$! It could be: permission problem, lack of space,...
msgFilePreviousFile = There is a file named $OBJ$! Please, choose another name
msgFilePreviousFileAux = The HTML file '$OBJ$' was generated, but not its auxiliary $OBJ$ (I used the previous auxiliary)!
msgFileNameStoreEmpty = You should provide a name in order to store this session in a file
msgFileNameExtInvalid = The name '$OBJ' has an invalid or empty extension '$OBJ'. You must use 'icg' or 'html'
msgFileHTMLhasAux = Attention: with the file '$OBJ$' you need to keep in the same directory the files 'iCG.jar' and '$OBJ$'
msgFileNameOpenEmpty = In order to open an iCG session, you must provide the name of this file
msgFileNotFound =  I am sorry, I could not find a file name '$OBJ$'
msgFileIsEmpty = Attention, this file has no content, it is empty!

REM icg.emulador.EmulatorMainPanel
emulAboutCommand = about commands
emulinstruction = instruction
emulInstruction = Instruction
emulAcumulator = Acumulator
emulValueAC = value AC
inputText = <data input>

REM icg.io.Arquivos
msgArqInvalido = This file does not exist!
msgMenuAbrir = Open file...
