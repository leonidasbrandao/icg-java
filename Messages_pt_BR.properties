
REM = Lembrar de alterar as variáveis "nMsgEmul" e "nMsgComp" em icg.ig.JanelaAjuda

msgVersao     = Versão: $OBJ$ de $OBJ$

# Configuracao.java: messages to buttons
buttonModelCompile           = Usar ambiente para compilação
buttonModelEmulator          = Usar ambiente para emulação
buttonEvaluate               = Avaliar exercício
buttonStartConstructExercise = Iniciar o construtor de gabarito
buttonStartEmul              = Iniciar emulação do código
buttonEmulStepByStep         = Emulação passo-a-passo: próximo passo
buttonLoadCode               = Carrega o código para a memória
buttonInfo                   = Informações
buttonFontMemory             = Altera fonte da memória
buttonFontCode               = Altera fonte do código
buttonConstructExercise      = Constrói gabarito de exercício: anota entradas/saídas
buttonCompile                = Compila: gera código objeto
buttonAbout                  = Sobre o iCG
buttonHelp                   = \ Ajuda

REM = Gabarito
gabInicio     = Anota cada entradas/saídas (dirante emulação), ao final clique em "Avaliar exercício"
gabFim        = Final de anotação para construção do gabarito
gabErTitle    = Sobre construção de exercícios
gabEr1Exp1    = Para gerar um gabarito para exercício, é preciso
gabEr1Exp2    = haver um programa modelo carregado em Memória!
gabEr2Exp1  = Como gerar um gabarito para exercício:
gabEr2Exp2  = 1. agora você deve rodar seu programa;
gabEr2Exp3  = 2. digite os dados requeridos por seu programa;
gabEr2Exp4  = 3. quando seu programa terminar, você pode finalizar o registro
gabEr2Exp5  = \ \ \ do gabarito clicando no mesmo botão ou iniciar o registro
gabEr2Exp6  = \ \ \ novo conjunto de <entradas x saídas> para este gabarito
gabEr3Exp1  = O gabarito do novo exercício está pronto para ser registrado,
gabEr3Exp2  = por favor, use agora o botão:
gabErrorEmpty1 = Lamento, mas não encontrei registros de listas de <entradas x saídas>
gabErrorEmpty2 = para serem usadas como gabarito de exercício!


REM
msgCommand      = Comando
msgAboutCommand = sobre comando
msgOutput       = saída
msgAcumulator   = Acumulador
msgValueAC      = Valor AC
msgEditFont     = Edita fonte de
msgFMemory      = Memória
msgFCode        = Código
msgStore        = Gravar
msgOpen         = Abrir

REM icg.compilador.CompilerPanel
msgCode         = Digite seu programa aqui
msgObject       = Executável
msgEnterCode    = Aqui virão as mensagens. Digite seu programa na janela de "Códigos"
msgEmptyCode    = Código vazio! É preciso digitar seu código fonte

REM icg.compilador.CompilerBaseClass, icg.compilador.Elemento
cmdIf = se
cmdElse = senao
cmdWhile = enquanto
cmdRead = leia
cmdWrite = escreva

REM icg.compilador.CompilerBaseClas
msgCompComp = Compilação
msgCompOK = Cadeia reconhecida com sucesso
msgCompErrNotOK = Falha no reconhecimento da cadeia
msgCompErrInvComL = Linha $OBJ$. Erro: comando inválido! 
msgCompErrOpenParTpar = Erro: esperava um operando após  \'(\' (encontrado \'$OBJ$\')
msgCompErrCloseParTpar = Erro: esperava um \')\' (encontrado \'$OBJ$\')
msgCompErrParOrOperTpar = Erro: esperava um \'(\' ou operando (encontrado \'$OBJ$\')
msgCompErrELfinal = EXPLOG - Erro: final de cadeia  
msgCompErrEmptyAfterOper = Erro: final de cadeia após um operador unário (\'+\' ou \'-\'), esperava operando
msgCompErrEAend = Erro: final de cadeia após Expressão Aritmética
msgCompErrEAendT = Erro: final de cadeia após fator de Expressão Aritmética
msgCompErrELexpect = Erro: Era esperado Expressão Lógica.
msgCompErrParamVar = Erro: Parâmetros incorretos, era esperada uma variável
msgCompErrCommEnd = Erro: Era esperado \';\' após comando
msgCompErrExpectEA = Erro: Era esperada uma expressão aritmetica (para variavel a esquerda) 
msgCompErrExpectComm = Erro: Era esperado um comando
msgCompErrFound = Encontrei um \"$OBJ$\" (no item $OBJ$) 
msgCompErrExpectVar = Erro: era esperada uma variável
msgCompErrNotExpectFinal = Erro: não era esperado o final de cadeia 
msgCompErrExpectTypeObj = Erro: confusao entre tipo de objeto e o objeto em si... 
msgCompErrExpectCloseParEL = Erro: esperava um \')\' após uma Expressão Lógica
msgCompErrExpectCloseParOrComma = Erro: Era esperado \')\' ou \',\'
msgCompErrExpectOpenPar = Erro: Era esperado o símbolo \')\'

REM Botao, ToolTip
REM Compilador
Emulador = Emulador
Compilador = Compilador
Informacoes = Informação
Ajuda = Ajuda
Sobre = Sobre
Compila = Compila
REM Emulador
EnviarAvaliar = Enviar/Avaliar exercício
Gabarito = Gabarito
Emula = Emula
EmulaPassoPasso = Emula passo-a-passo
Atualiza = Atualiza

REM = Alterar 'nMsgComp' em icg.ig.JanelaAjuda
msgAjudaComp  =   Ajuda sobre compilador do iCG
ajudaComp1    =      iCG - emulador/compilador\n
ajudaComp2    =Comandos disponíveis:\n
ajudaComp3    = Operadores relacionais (ROp): ==, !=, <=, >=, <, >
ajudaComp4    = Operadores lógicos (LOp):     &&, ||, ! (e, ou e negação)
ajudaComp5    = BCMD:      comando simples ("leia(a);") ou bloco "{ ... }"
ajudaComp5    = EA:        expressão aritmética (a+b, a-b, a*b, a/b)
ajudaComp6    = EL:        expressão lógica ("EA ROp EA", "EL LOp EL")\n
ajudaComp7    = Seleção:   "se (EL) BCMD [senao BCMD]"
ajudaComp8    = Repetição: "enquanto (EL) BCMD"
ajudaComp9    = Entrada:   "leia(var);"
ajudaComp10   = Saída:     "escreva(var);"

REM = Alterar 'nMsgEmul' em icg.ig.JanelaAjuda
msgAjudaEmul  =   Ajuda sobre o emulador do iCG
ajudaEmul1    =      iCG - emulador/compilador\n
ajudaEmul2    = Digite o código de seu programa na caixa à direita
ajudaEmul3    = Após digitar, clique em "Atualiza"
ajudaEmul4    = Clique em "Emular" para 'rodar' seu programa
ajudaEmul5    = Clique em "Passo a passo" para 'rodar', uma instrução por vez\n
ajudaEmul6    = Comandos: 
ajudaEmul7    = 0EE: AC <- cEE
ajudaEmul8    = 1EE: EE <- cAC
ajudaEmul9    = 2EE: AC <- cAC + cEE
ajudaEmul10   = 3EE: AC <- cAC - cEE
ajudaEmul11   = 4EE: AC <- cAC * cEE
ajudaEmul12   = 5EE: AC <- cAC / cEE
ajudaEmul13   = 6EE: se cAC>0, faça EPI <- EE
ajudaEmul14   = 7EE: leia valor e guarde em EE
ajudaEmul15   = 8EE: escreva o valor em EE
ajudaEmul16   = 9EE: EPI <- EE
ajudaEmul17   = 0-N: AC <- N, sendo N inteiro
ajudaEmul18   = 000: final de execução

REM = Alterar 'nMsgSobre' em icg.ig.JanelaAjuda
msgSobre      =   Sobre o iCG: Módulo de Aprendizagem
msgSobre1     =      iCG - emulador/compilador\n
msgSobre2     = Módulo de Aprendizagem Interativa (iMA)
msgSobre3     = Ensino/aprendizagem de Introdução à Computação
msgSobre4     = Autor: Leônidas de Oliveira Brandão\n
msgSobre5     = http://www.matematica.br/icg

barraMsg      = Barra de mensagens

REM icg.iCG
buttonMemory = Memória
buttonCode = Código
buttonCodes = Códigos
labelEdit = Edita fonte de
labelExerc = Exercício
errInputEmpty = Exercício com problemas: não existem entradas para testes no gabarito
exercNotCompleteRight = Seu exercício apresenta alguma incompatibilidade com o gabarito do professor
exercCompleteRight = Parabéns! Seu exercício atende a todos requisitos
exercWrong = Infelizmente seu exercício falhou em todos os testes...
editionOfFont = Edição de fontes
modelOfFont = O tipo da fonte será como neste exemplo
appletInformation = Informacoes sobre o Applet - Applet Information
exercEmptyAnswer = Atenção: sua resposta esta \"em branco\"
exercFeedbackBlocked = Neste exercício o resultado da avaliação foi bloqueada pelo professor!
exercAuthorTestNum = Teste número
exercInputMark = Entrada
exercOutputMark = Saída
exercTestCorrect = O exercício passou neste teste
exercTestWrong = O exercício não passou neste teste
exercSituation = Situação
exercNotTemplate = Este não é um exercício com avaliação automática
errFileNotiCG = Erro: este arquivo não parece ser do iCG...

REM icg.emulador.EmulatorBaseClass
emulInvalidInstruction = instrução inválida
msgArqGravadoSucesso = Arquivo gravado com sucesso!
emulStore = Gravar
emulOpen = Abrir
emulOutput = saída
emulLoadedInstr = foram carregadas
emulinstructions = instruções
emulInvalidNum = instrução inválida
emulErrorInvInstr = Não era instrução válida! Em
emulEndProgramm = final de programa
emulEmpty = vazio
msgArqInvalido = Arquivo inexistente!
msgFileNotWrite = Não foi possível gravar um arquivo com nome $OBJ$! Talvez seja problema de permissão ou espaço no dispositivo
msgFilePreviousFile = Já existe um arquivo com nome $OBJ$! Por favor, escolha outro nome
msgFilePreviousFileAux = O arquivo HTML de nome '$OBJ$' foi gravado, entretanto não gravou seu auxiliar $OBJ$ (que é essencial)!
msgFileNameStoreEmpty = É necessário providenciar o nome do arquivo que receberá os dados de sua sessão
msgFileNameExtInvalid = O nome '$OBJ$' tem extensão inválida ou vazia ('$OBJ$'). Deve ser usada extensão 'icg' ou 'html'
msgFileHTMLhasAux = Atenção: com o arquivo '$OBJ$' é preciso estarem no mesmo diretório os arquivos 'iCG.jar' e '$OBJ$'
msgFileNameOpenEmpty = É necessário providenciar o nome do arquivo que deseja abrir
msgFileNotFound = Lamento, não encontrei o arquivo de nome '$OBJ$'
msgFileIsEmpty = Atenção, este arquivo não tem conteúdo, ele está vazio!


REM icg.emulador.EmulatorMainPanel
emulAboutCommand = sobre comandos
emulinstruction = instrução
emulInstruction = Instrução
emulAcumulator = Acumulador
emulValueAC = valor AC
inputText = <entrada de dados>

REM icg.io.Arquivos
msgArqInexistente = O arquivo $OBJ$ n\u00e3o foi encontrado!
msgMenuAbrir = Abrir arquivo...